// <auto-generated />
using System;
using CarDataIngestor.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarDataIngestor.Migrations
{
    [DbContext(typeof(CarDataContext))]
    [Migration("20230305160409_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CarDataIngestor.Data.Entities.Drive", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Drives");
                });

            modelBuilder.Entity("CarDataIngestor.Data.Entities.DriveSnapshot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("CoolantTemp")
                        .HasColumnType("float");

                    b.Property<Guid?>("DriveId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("EngineLoad")
                        .HasColumnType("float");

                    b.Property<double>("FuelLevel")
                        .HasColumnType("float");

                    b.Property<double>("IntakeTemperature")
                        .HasColumnType("float");

                    b.Property<double>("RPM")
                        .HasColumnType("float");

                    b.Property<int>("SequenceNumber")
                        .HasColumnType("int");

                    b.Property<double>("Speed")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DriveId");

                    b.ToTable("DriveSnapshots");
                });

            modelBuilder.Entity("CarDataIngestor.Data.Entities.DriveSnapshot", b =>
                {
                    b.HasOne("CarDataIngestor.Data.Entities.Drive", "Drive")
                        .WithMany("Snapshots")
                        .HasForeignKey("DriveId");

                    b.Navigation("Drive");
                });

            modelBuilder.Entity("CarDataIngestor.Data.Entities.Drive", b =>
                {
                    b.Navigation("Snapshots");
                });
#pragma warning restore 612, 618
        }
    }
}
